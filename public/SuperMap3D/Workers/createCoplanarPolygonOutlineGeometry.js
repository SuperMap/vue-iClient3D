define(["./EllipsoidRhumbLine-18dee174","./buildModuleUrl-c0836874","./Cartesian4-442405e6","./Math-3024ab74","./FeatureDetection-caf5f946","./CoplanarPolygonGeometryLibrary-e7aee56f","./when-b60132fc","./GeometryAttribute-eb047ff3","./GeometryAttributes-252e9929","./PolygonGeometryLibrary-ceffc78b","./GeometryPipeline-7ee31a30","./IndexDatatype-a3f4b187","./PrimitiveType-ebb8c588","./Cartographic-2cfa3a3a","./Cartesian2-c4c2a8f9","./WebGLConstants-aba9fc67","./OrientedBoundingBox-24d03d3b","./EllipsoidTangentPlane-1a9db025","./Plane-6b2f5e52","./Transforms-04c4d562","./earcut-2.2.1-20c8012f","./AttributeCompression-2ece5912","./EncodedCartesian3-6a9cfb29"],(function(e,r,t,n,a,o,i,y,l,c,u,p,s,d,f,m,g,b,h,P,v,G,L){"use strict";function C(e){for(var r=e.length,t=new Float64Array(3*r),n=p.IndexDatatype.createTypedArray(r,2*r),o=0,i=0,c=0;c<r;c++){var u=e[c];t[o++]=u.x,t[o++]=u.y,t[o++]=u.z,n[i++]=c,n[i++]=(c+1)%r}var d=new l.GeometryAttributes({position:new y.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:t})});return new y.Geometry({attributes:d,indices:n,primitiveType:s.PrimitiveType.LINES})}function T(e){var r=(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=r,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=c.PolygonGeometryLibrary.computeHierarchyPackedLength(r)+1}T.fromPositions=function(e){return new T({polygonHierarchy:{positions:(e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT)).positions}})},T.pack=function(e,r,t){return t=i.defaultValue(t,0),r[t=c.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,r,t)]=e.packedLength,r};var E={polygonHierarchy:{}};return T.unpack=function(e,r,t){r=i.defaultValue(r,0);var n=c.PolygonGeometryLibrary.unpackPolygonHierarchy(e,r);r=n.startingIndex,delete n.startingIndex;var a=e[r];return i.defined(t)||(t=new T(E)),t._polygonHierarchy=n,t.packedLength=a,t},T.createGeometry=function(n){var a=n._polygonHierarchy,i=a.positions;if(!((i=e.arrayRemoveDuplicates(i,t.Cartesian3.equalsEpsilon,!0)).length<3)&&o.CoplanarPolygonGeometryLibrary.validOutline(i)){var l=c.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(a,!1);if(0!==l.length){for(var p=[],s=0;s<l.length;s++){var d=new c.GeometryInstance({geometry:C(l[s])});p.push(d)}var f=u.GeometryPipeline.combineInstances(p)[0],m=r.BoundingSphere.fromPoints(a.positions);return new y.Geometry({attributes:f.attributes,indices:f.indices,primitiveType:f.primitiveType,boundingSphere:m})}}},function(e,t){return i.defined(t)&&(e=T.unpack(e,t)),e._ellipsoid=r.Ellipsoid.clone(e._ellipsoid),T.createGeometry(e)}}));

define(["./arrayFill-0e93951b","./buildModuleUrl-9403d69d","./Cartesian2-54f49cd5","./Cartographic-9ee1f1bd","./Check-737bd4ec","./ComponentDatatype-94b9147c","./CylinderGeometryLibrary-37f81d0f","./when-7d8885d2","./GeometryAttribute-bf27d0ff","./GeometryAttributes-2f749385","./GeometryOffsetAttribute-fbeb6f1a","./IndexDatatype-cb5f74b7","./FeatureDetection-07e177c7","./Math-4ffce144","./Event-1c0f5ff4","./RuntimeError-f53bcb51","./WebGLConstants-6b41cc89","./Cartesian4-6d2e270a"],(function(e,t,i,r,a,n,o,u,s,f,d,b,l,c,m,p,y,_){"use strict";var h=new i.Cartesian2;function v(e){var t=(e=u.defaultValue(e,u.defaultValue.EMPTY_OBJECT)).length,i=e.topRadius,r=e.bottomRadius,a=u.defaultValue(e.slices,128),n=Math.max(u.defaultValue(e.numberOfVerticalLines,16),0);this._length=t,this._topRadius=i,this._bottomRadius=r,this._slices=a,this._numberOfVerticalLines=n,this._offsetAttribute=e.offsetAttribute,this._workerName="createCylinderOutlineGeometry"}v.packedLength=6,v.pack=function(e,t,i){return i=u.defaultValue(i,0),t[i++]=e._length,t[i++]=e._topRadius,t[i++]=e._bottomRadius,t[i++]=e._slices,t[i++]=e._numberOfVerticalLines,t[i]=u.defaultValue(e._offsetAttribute,-1),t};var A={length:void 0,topRadius:void 0,bottomRadius:void 0,slices:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};return v.unpack=function(e,t,i){t=u.defaultValue(t,0);var r=e[t++],a=e[t++],n=e[t++],o=e[t++],s=e[t++],f=e[t];return u.defined(i)?(i._length=r,i._topRadius=a,i._bottomRadius=n,i._slices=o,i._numberOfVerticalLines=s,i._offsetAttribute=-1===f?void 0:f,i):(A.length=r,A.topRadius=a,A.bottomRadius=n,A.slices=o,A.numberOfVerticalLines=s,A.offsetAttribute=-1===f?void 0:f,new v(A))},v.createGeometry=function(a){var c=a._length,m=a._topRadius,p=a._bottomRadius,y=a._slices,_=a._numberOfVerticalLines;if(!(c<=0||m<0||p<0||0===m&&0===p)){var v,A=2*y,R=o.CylinderGeometryLibrary.computePositions(c,m,p,y,!1),C=2*y;if(_>0){var G=Math.min(_,y);v=Math.round(y/G),C+=G}var O,V=b.IndexDatatype.createTypedArray(A,2*C),g=0;for(O=0;O<y-1;O++)V[g++]=O,V[g++]=O+1,V[g++]=O+y,V[g++]=O+1+y;if(V[g++]=y-1,V[g++]=0,V[g++]=y+y-1,V[g++]=y,_>0)for(O=0;O<y;O+=v)V[g++]=O,V[g++]=O+y;var L=new f.GeometryAttributes;L.position=new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:R}),h.x=.5*c,h.y=Math.max(p,m);var w=new t.BoundingSphere(r.Cartesian3.ZERO,i.Cartesian2.magnitude(h));if(u.defined(a._offsetAttribute)){c=R.length;var D=new Uint8Array(c/3),E=a._offsetAttribute===d.GeometryOffsetAttribute.NONE?0:1;e.arrayFill(D,E),L.applyOffset=new s.GeometryAttribute({componentDatatype:n.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:D})}return new s.Geometry({attributes:L,indices:V,primitiveType:l.PrimitiveType.LINES,boundingSphere:w,offsetAttribute:a._offsetAttribute})}},function(e,t){return u.defined(t)&&(e=v.unpack(e,t)),v.createGeometry(e)}}));
